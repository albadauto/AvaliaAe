USE avaliae;
--Procedure para deixar todos as associações aprovadas
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND OBJECT_ID = OBJECT_ID('dbo.SETALLASSOCIATIONSINAPROVED'))
BEGIN 
	DROP PROCEDURE dbo.SETALLASSOCIATIONSINAPROVED;
END
GO

CREATE PROCEDURE SETALLASSOCIATIONSINAPROVED
AS 
BEGIN
	IF EXISTS(SELECT * FROM Associations)
	BEGIN
		UPDATE [Associations] SET STATUS = 'A'
	END
		
END;
--Procedure para deixar todas as associações desaprovadas
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND OBJECT_ID = OBJECT_ID('dbo.SETALLASSOCIATIONINPENDENT'))
BEGIN 
	DROP PROCEDURE dbo.SETALLASSOCIATIONINPENDENT
END
GO

CREATE PROCEDURE SETALLASSOCIATIONINPENDENT
AS 
BEGIN
	IF EXISTS(SELECT * FROM Associations)
	BEGIN
		UPDATE [Associations] SET STATUS = 'P'
	END
END;

 --Procedure feita para setar status de um usuário na tabela association
IF EXISTS(SELECT * FROM sys.objects WHERE type = 'P' AND OBJECT_ID = OBJECT_ID('dbo.SETASSOCIATIONOFUSER'))
BEGIN
	DROP PROCEDURE dbo.SETASSOCIATIONOFUSER
END
GO

CREATE PROCEDURE SETASSOCIATIONOFUSER(@UserId int, @Status varchar(1))
AS
BEGIN
	IF EXISTS(SELECT * FROM [User] WHERE Id = @UserId)
	BEGIN
		UPDATE [Associations] SET STATUS = @Status WHERE UserId = @UserId
	END
	SELECT * FROM [Associations] WHERE UserId = @UserId;
END
GO

--Procedure para criar tipos de instituições
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND OBJECT_ID = OBJECT_ID('dbo.ADDINSTITUTIONSTYPE'))
BEGIN 
	DROP PROCEDURE dbo.ADDINSTITUTIONSTYPE;
END
GO

CREATE PROCEDURE ADDINSTITUTIONSTYPE
AS 
BEGIN
	INSERT INTO 
		INSTITUTIONTYPE 
	VALUES 
	('ESCOLA'), 
	('ESCOLA TÉCNICA'), 
	('ESCOLA PARTICULAR'), 
	('FACULDADE PARTICULAR'), 
	('FACULDADE PÚBLICA'), 
	('ESCOLA INFANTIL'),
	('OUTROS')
		
END
GO

--Procedure para criar tipos de pessoas físicas
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND OBJECT_ID = OBJECT_ID('dbo.ADDFISICPEOPLESTYPES'))
BEGIN 
	DROP PROCEDURE dbo.ADDFISICPEOPLESTYPES;
END
GO

CREATE PROCEDURE ADDFISICPEOPLESTYPES
AS 
BEGIN
	INSERT INTO 
		 USERTYPE
	VALUES 
	('ALUNO(A)'), 
	('PROFESSOR(A)'), 
	('GESTOR ADMINISTRATIVO(A)'), 
	('PAIS RESPONSÁVEIS'), 
	('OUTROS')

		
END
GO

--Procedure para criar massa de dados para administrador

IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND OBJECT_ID = OBJECT_ID('dbo.MASSADEDADOS_ADMIN'))
BEGIN 
	DROP PROCEDURE dbo.MASSADEDADOS_ADMIN;
END
GO
CREATE PROCEDURE MASSADEDADOS_ADMIN
AS 
BEGIN
	IF NOT EXISTS(SELECT * FROM [LEVEL])
	BEGIN
		INSERT INTO [LEVEL] VALUES ('ADMINISTRADOR'), ('GESTOR'), ('SUPERVISOR')
	END
	IF NOT EXISTS(SELECT EMAIL FROM [ADMIN] WHERE EMAIL = 'admin@avaliae.com')
	BEGIN
		INSERT INTO [ADMIN] VALUES ('Administrador', '47575105867', 'admin@avaliae.com', 3, 'SBNJTRN+FjG7owHVrKtue7eqdM4RhdRWVl71HXN2d7I=')
	END


END

--Procedure para criar massa de dados para apresentação
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND OBJECT_ID = OBJECT_ID('dbo.MASSADEDADOS'))
BEGIN 
	DROP PROCEDURE dbo.MASSADEDADOS;
END
GO

CREATE PROCEDURE MASSADEDADOS
AS 
BEGIN
	DECLARE @COUNT INT;
	SET @COUNT = 1;
	WHILE @COUNT <= (SELECT MAX(ID) FROM InstitutionType)
	BEGIN
		INSERT INTO 
			INSTITUTION
		VALUES
			(CONCAT('INSTITUIÇÃO', @COUNT), 
			 CONCAT('111111111', @COUNT), 
			CONCAT('9423194', @COUNT, @COUNT + 1), 
			CONCAT('inst', @COUNT, '@avaliae.com'),
			'SBNJTRN+FjG7owHVrKtue7eqdM4RhdRWVl71HXN2d7I=',
			'rua sla',
			'SP',
			12,
			12,
			'lorem ipsum',
			@COUNT,
			NULL,
			NULL
			);
		SET @COUNT = @COUNT + 1
	END
	EXEC MASSADEDADOS_ADMIN
	EXEC ADDFISICPEOPLESTYPES
	EXEC ADDINSTITUTIONSTYPE
		
END
GO



SELECT * FROM INSTITUTION