@model InstitutionModel


<div class="container text-center bg-light mt-5">
	<h1 class="display-6 mt-5">Registro de Instituição</h1>
	@if(TempData["successInstitution"] != null)
	{
		<div class="alert alert-success">
			@TempData["successInstitution"]
		</div>
	}
	@using (Html.BeginForm("CreateNewInstitution", "Register", FormMethod.Post))
	{
		<div class="row">
			<div class="col">
				@Html.ValidationMessageFor(x => x.InstitutionName, "", new {style = "color: red"})
				<div class="form-floating">
					<input type="text" class="form-control" id="floatingPassword" placeholder="Nome da instituição" asp-for="InstitutionName">
					<label for="floatingPassword">Nome da instituição</label>
				</div>
			</div>
			<div class="col">
				@Html.ValidationMessageFor(x => x.Cnpj, "", new {style = "color: red"})
				<div class="form-floating">
					<input type="number" class="form-control" id="floatingPassword" placeholder="CNPJ" asp-for="Cnpj" onblur="if(!validarCNPJ(this.value)) return alert('CNPJ Inválido') ">
					<label for="floatingPassword">CNPJ</label>
				</div>
			</div>

		</div>

		<div class="row mt-3">
			<div class="col">
				@Html.ValidationMessageFor(x => x.Phone, "", new {style = "color: red"})
				<div class="form-floating">
					<input type="text" class="form-control" id="floatingPassword" placeholder="Telefone" asp-for="Phone">
					<label for="floatingPassword">Telefone</label>
				</div>
			</div>
			<div class="col">
				@Html.ValidationMessageFor(x => x.Email, "", new {style = "color: red"})
				<div class="form-floating">
					<input type="text" class="form-control" id="floatingPassword" placeholder="Email" asp-for="Email">
					<label for="floatingPassword">Email</label>
				</div>
			</div>
		</div>

		<div class="row mt-3">
			<div class="col">
				@Html.ValidationMessageFor(x => x.Password, "", new {style = "color: red"})
				<div class="form-floating">
					<input type="password" class="form-control" id="floatingPassword" placeholder="Senha" asp-for="Password">
					<label for="floatingPassword">Senha</label>
				</div>
			</div>
			<div class="col">
				@Html.ValidationMessageFor(x => x.Cnpj, "", new {style = "color: red"})

				<div class="form-floating">
					<input type="password" class="form-control" id="floatingPassword" placeholder="Repita a senha">
					<label for="floatingPassword">Repita a senha</label>
				</div>
			</div>
		</div>

		<h1 class="display-6 mt-3">Informações de localidade</h1>
		<div class="row mt-3">
			<div class="col">
				@Html.ValidationMessageFor(x => x.Address, "", new {style = "color: red"})
				<div class="form-floating">
					<input type="text" class="form-control" id="floatingPassword" placeholder="Endereço" asp-for="Address">
					<label for="floatingPassword">Endereço</label>
				</div>
			</div>
			<div class="col">
				@Html.ValidationMessageFor(x => x.Number, "", new {style = "color: red"})
				<div class="form-floating">
					<input type="number" class="form-control" id="floatingPassword" placeholder="Número" asp-for="Number">
					<label for="floatingPassword">Número</label>
				</div>
			</div>
			<div class="col">
				@Html.ValidationMessageFor(x => x.District, "", new {style = "color: red"})
				<div class="form-floating">
					<input type="text" class="form-control" id="floatingPassword" placeholder="Endereço" asp-for="District">
					<label for="floatingPassword">Bairro</label>
				</div>
			</div>

		</div>
		<h1 class="display-6 mt-3">Informações adicionais</h1>
		<div class="row mt-3">
			<div class="col">
				<div class="form-floating">
					<input type="text" class="form-control" id="floatingPassword" placeholder="Nome do diretor da unidade" asp-for="OwnerName">
					<label for="floatingPassword">Nome do diretor da unidade</label>
				</div>
			</div>
			<div class="col">
				<div class="form-floating">
					<input type="text" class="form-control" id="floatingPassword" placeholder="CPF" asp-for="OwnerCpf">
					<label for="floatingPassword">CPF</label>
				</div>
			</div>
		</div>
		<div class="row mt-3">
			<div class="col">
				<input class="form-check-input" type="checkbox" value="" id="flexCheckChecked" checked>
				<label class="form-check-label" for="flexCheckChecked">
					Concordo e aceito os Termos de <a asp-controller="Register" asp-action="Privacy">privacidade de dados</a>
				</label>
			</div>
		</div>
		<div class="row mt-5">
			<div class="col">
				<button class="btn btn-primary" type="submit">Cadastrar</button>
				<a class="btn btn-secondary" asp-action="Index">Sou pessoa Física!</a>
			</div>

		</div>
		<a asp-controller="Login" asp-action="Index">Já tenho conta no Avalia Aê!</a>
	}
	
	

</div>
<script>
	function validarCNPJ(cnpj) {

		cnpj = cnpj.replace(/[^\d]+/g, '');

		if (cnpj == '') return false;

		if (cnpj.length != 14)
			return false;

		// Elimina CNPJs invalidos conhecidos
		if (cnpj == "00000000000000" ||
			cnpj == "11111111111111" ||
			cnpj == "22222222222222" ||
			cnpj == "33333333333333" ||
			cnpj == "44444444444444" ||
			cnpj == "55555555555555" ||
			cnpj == "66666666666666" ||
			cnpj == "77777777777777" ||
			cnpj == "88888888888888" ||
			cnpj == "99999999999999")
			return false;

		// Valida DVs
		tamanho = cnpj.length - 2
		numeros = cnpj.substring(0, tamanho);
		digitos = cnpj.substring(tamanho);
		soma = 0;
		pos = tamanho - 7;
		for (i = tamanho; i >= 1; i--) {
			soma += numeros.charAt(tamanho - i) * pos--;
			if (pos < 2)
				pos = 9;
		}
		resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
		if (resultado != digitos.charAt(0))
			return false;

		tamanho = tamanho + 1;
		numeros = cnpj.substring(0, tamanho);
		soma = 0;
		pos = tamanho - 7;
		for (i = tamanho; i >= 1; i--) {
			soma += numeros.charAt(tamanho - i) * pos--;
			if (pos < 2)
				pos = 9;
		}
		resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
		if (resultado != digitos.charAt(1))
			return false;

		return true;

	}
	}
</script>